{"version":3,"file":"map.js","sources":["pages/API/map/map.nvue","../../../../../Work-Tools/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXNcQVBJXG1hcFxtYXAubnZ1ZQ"],"sourcesContent":["<template>\r\n    <view class=\"content\">\r\n        <map class=\"map\" id=\"map1\" ref=\"map1\" :controls=\"controls\" :scale=\"scale\" :longitude=\"location.longitude\"\r\n            :latitude=\"location.latitude\" :show-location=\"showLocation\" :enable-3D=\"enable3D\" :rotate=\"rotate\" :skew=\"skew\"\r\n            :show-compass=\"showCompass\" :enable-overlooking=\"enableOverlooking\" :enable-zoom=\"enableZoom\"\r\n            :enable-scroll=\"enableScroll\" :enable-rotate=\"enableRotate\" :enable-satellite=\"enableSatellite\"\r\n            :enable-traffic=\"enableTraffic\" :markers=\"markers\" :polyline=\"polyline\" :circles=\"circles\" :polygons=\"polygons\"\r\n            :include-points=\"includePoints\" @tap=\"maptap\" @controltap=\"oncontroltap\" @markertap=\"onmarkertap\"\r\n            @callouttap=\"oncallouttap\" @poitap=\"onpoitap\" @updated=\"onupdated\" @regionchange=\"onregionchange\"></map>\r\n        <scroll-view class=\"scrollview\" scroll-y=\"true\">\r\n            <!-- <view class=\"list-item\">\r\n                <text class=\"list-text\">显示3D楼块</text>\r\n                <switch :checked=\"enable3D\" @change=\"enableThreeD\" />\r\n            </view>\r\n            <view class=\"list-item\">\r\n                <text class=\"list-text\">显示指南针</text>\r\n                <switch :checked=\"showCompass\" @change=\"changeShowCompass\" />\r\n            </view>\r\n            <view class=\"list-item\">\r\n                <text class=\"list-text\">开启俯视</text>\r\n                <switch :checked=\"enableOverlooking\" @change=\"changeEnableOverlooking\" />\r\n            </view>\r\n            <view class=\"list-item\">\r\n                <text class=\"list-text\">是否支持缩放</text>\r\n                <switch :checked=\"enableZoom\" @change=\"changeEnableZoom\" />\r\n            </view>\r\n            <view class=\"list-item\">\r\n                <text class=\"list-text\">是否支持拖动</text>\r\n                <switch :checked=\"enableScroll\" @change=\"changeEnableScroll\" />\r\n            </view>\r\n            <view class=\"list-item\">\r\n                <text class=\"list-text\">是否支持旋转</text>\r\n                <switch :checked=\"enableRotate\" @change=\"changeEnableRotate\" />\r\n            </view>\r\n            <view class=\"list-item\">\r\n                <text class=\"list-text\">是否开启卫星图</text>\r\n                <switch :checked=\"enableSatellite\" @change=\"changeEnableSatellite\" />\r\n            </view>\r\n            <view class=\"list-item\">\r\n                <text class=\"list-text\">是否开启实时路况</text>\r\n                <switch :checked=\"enableTraffic\" @change=\"changeEnableTraffic\" />\r\n            </view> -->\r\n\t\t\t<!-- #ifndef MP-JD -->\r\n            <button class=\"button\" @click=\"changeScale\">changeScale</button>\r\n\t\t\t<!-- #endif -->\r\n\t\t\t<!-- #ifndef H5 || APP || MP-JD || MP-KUAISHOU -->\r\n\t\t\t<button class=\"button\" @click=\"changeRotate\">changeRotate</button>\r\n\t\t\t<button class=\"button\" @click=\"changeSkew\">changeSkew</button>\r\n\t\t\t<!-- #endif -->\r\n\r\n            <button class=\"button\" @click=\"addMarkers\">addMarkers</button>\r\n            <button class=\"button\" @click=\"addPolyline\">addPolyline</button>\r\n\t\t\t<!-- #ifndef MP-JD -->\r\n            <button class=\"button\" @click=\"addPolygons\">addPolygons</button>\r\n\t\t\t<!-- #endif -->\r\n            <button class=\"button\" @click=\"addCircles\">addCircles</button>\r\n            <button class=\"button\" @click=\"includePoint\">includePoints</button>\r\n            <button class=\"button\" @click=\"handleGetCenterLocation\">getCenterLocation</button>\r\n            <button class=\"button\" @click=\"handleGetRegion\">getRegion</button>\r\n\t\t\t<!-- #ifndef MP-JD -->\r\n            <button class=\"button\" @click=\"handleTranslateMarker\">translateMarker</button>\r\n\t\t\t<!-- #endif -->\r\n        </scroll-view>\r\n    </view>\r\n</template>\r\n\r\n<script>\r\n    const testMarkers = [{\r\n            id: 0,\r\n            latitude: 39.989631,\r\n            longitude: 116.481018,\r\n            title: '方恒国际 阜通东大街6号',\r\n            zIndex: '1',\r\n            rotate: 0,\r\n            width: 20,\r\n            height: 20,\r\n            anchor: {\r\n                x: 0.5,\r\n                y: 1\r\n            },\r\n            callout: {\r\n                content: '方恒国际 阜通东大街6号',\r\n                color: '#00BFFF',\r\n                fontSize: 10,\r\n                borderRadius: 4,\r\n                borderWidth: 1,\r\n                borderColor: '#333300',\r\n                bgColor: '#CCFF99',\r\n                padding: '5',\r\n                display: 'ALWAYS'\r\n            }\r\n        },\r\n        {\r\n            id: 1,\r\n            latitude: 39.9086920000,\r\n            longitude: 116.3974770000,\r\n            title: '天安门',\r\n            zIndex: '1',\r\n            iconPath: '/static/location.png',\r\n            width: 40,\r\n            height: 40,\r\n            anchor: {\r\n                x: 0.5,\r\n                y: 1\r\n            },\r\n            callout: {\r\n                content: '首都北京\\n天安门',\r\n                color: '#00BFFF',\r\n                fontSize: 12,\r\n                borderRadius: 2,\r\n                borderWidth: 0,\r\n                borderColor: '#333300',\r\n                bgColor: '#CCFF11',\r\n                padding: '1',\r\n                display: 'ALWAYS'\r\n            }\r\n        }\r\n    ];\r\n    const testPolyline = [{\r\n            points: [{\r\n                    latitude: 39.925539,\r\n                    longitude: 116.279037\r\n                },\r\n                {\r\n                    latitude: 39.925539,\r\n                    longitude: 116.520285\r\n                }\r\n            ],\r\n            color: '#FFCCFF',\r\n            width: 7,\r\n            dottedLine: true,\r\n            arrowLine: true,\r\n            borderColor: '#000000',\r\n            borderWidth: 2\r\n        },\r\n        {\r\n            points: [{\r\n                    latitude: 39.938698,\r\n                    longitude: 116.275177\r\n                },\r\n                {\r\n                    latitude: 39.966069,\r\n                    longitude: 116.289253\r\n                },\r\n                {\r\n                    latitude: 39.944226,\r\n                    longitude: 116.306076\r\n                },\r\n                {\r\n                    latitude: 39.966069,\r\n                    longitude: 116.322899\r\n                },\r\n                {\r\n                    latitude: 39.938698,\r\n                    longitude: 116.336975\r\n                }\r\n            ],\r\n            color: '#CCFFFF',\r\n            width: 5,\r\n            dottedLine: true,\r\n            arrowLine: true,\r\n            borderColor: '#CC0000',\r\n            borderWidth: 3\r\n        }\r\n    ];\r\n    const testPolygons = [{\r\n            points: [{\r\n                    latitude: 39.781892,\r\n                    longitude: 116.293413\r\n                },\r\n                {\r\n                    latitude: 39.787600,\r\n                    longitude: 116.391842\r\n                },\r\n                {\r\n                    latitude: 39.733187,\r\n                    longitude: 116.417932\r\n                },\r\n                {\r\n                    latitude: 39.704653,\r\n                    longitude: 116.338255\r\n                }\r\n            ],\r\n            fillColor: '#FFCCFF',\r\n            strokeWidth: 3,\r\n            strokeColor: '#CC99CC',\r\n            zIndex: 11\r\n        },\r\n        {\r\n            points: [{\r\n                    latitude: 39.887600,\r\n                    longitude: 116.518932\r\n                },\r\n                {\r\n                    latitude: 39.781892,\r\n                    longitude: 116.518932\r\n                },\r\n                {\r\n                    latitude: 39.781892,\r\n                    longitude: 116.428932\r\n                },\r\n                {\r\n                    latitude: 39.887600,\r\n                    longitude: 116.428932\r\n                }\r\n            ],\r\n            fillColor: '#CCFFFF',\r\n            strokeWidth: 5,\r\n            strokeColor: '#CC0000',\r\n            zIndex: 3\r\n        }\r\n    ];\r\n    const testCircles = [{\r\n            latitude: 39.996441,\r\n            longitude: 116.411146,\r\n            radius: 15000,\r\n            strokeWidth: 5,\r\n            color: '#CCFFFF',\r\n            fillColor: '#CC0000'\r\n        },\r\n        {\r\n            latitude: 40.096441,\r\n            longitude: 116.511146,\r\n            radius: 12000,\r\n            strokeWidth: 3,\r\n            color: '#CCFFFF',\r\n            fillColor: '#FFCCFF'\r\n        },\r\n        {\r\n            latitude: 39.896441,\r\n            longitude: 116.311146,\r\n            radius: 9000,\r\n            strokeWidth: 1,\r\n            color: '#CCFFFF',\r\n            fillColor: '#CC0000'\r\n        }\r\n    ];\r\n    const testIncludePoints = [{\r\n            latitude: 39.989631,\r\n            longitude: 116.481018,\r\n        },\r\n        {\r\n            latitude: 39.9086920000,\r\n            longitude: 116.3974770000,\r\n        }\r\n    ];\r\n    export default {\r\n        data() {\r\n            return {\r\n                location: {\r\n                    longitude: 116.3974770000,\r\n                    latitude: 39.9086920000\r\n                },\r\n                controls: [{\r\n                    id: 1,\r\n                    position: {\r\n                        left: 5,\r\n                        top: 180,\r\n                        width: 30,\r\n                        height: 30\r\n                    },\r\n                    iconPath: '/static/logo.png',\r\n                    clickable: true\r\n                }],\r\n                showLocation: false,\r\n                scale: 13,\r\n                showCompass: true,\r\n                enable3D: true,\r\n                enableOverlooking: true,\r\n                enableZoom: true,\r\n                enableScroll: true,\r\n                enableRotate: true,\r\n                enableSatellite: false,\r\n                enableTraffic: false,\r\n                polyline: [],\r\n                markers: [],\r\n                polygons: [],\r\n                circles: [],\r\n                includePoints: [],\r\n                rotate: 0,\r\n                skew: 0\r\n            }\r\n        },\r\n        onLoad() {},\r\n        onReady() {\r\n            this.map = uni.createMapContext(\"map1\", this);\r\n        },\r\n        methods: {\r\n\t\t\t  // #ifndef MP-JD\r\n            changeScale() {\r\n                this.scale = this.scale == 9 ? 15 : 9;\r\n            },\r\n            changeRotate() {\r\n                this.rotate = this.rotate == 90 ? 0 : 90;\r\n            },\r\n\t\t\t\tchangeSkew() {\r\n\t\t\t\t    this.skew = this.skew == 30 ? 0 : 30;\r\n\t\t\t\t},\r\n\t\t\t\t// #endif\r\n            enableThreeD(e) {\r\n                this.enable3D = e.detail.value;\r\n            },\r\n            changeShowCompass(e) {\r\n                this.showCompass = e.detail.value;\r\n            },\r\n            changeEnableOverlooking(e) {\r\n                this.enableOverlooking = e.detail.value;\r\n            },\r\n            changeEnableZoom(e) {\r\n                this.enableZoom = e.detail.value;\r\n            },\r\n            changeEnableScroll(e) {\r\n                this.enableScroll = e.detail.value;\r\n            },\r\n            changeEnableRotate(e) {\r\n                this.enableRotate = e.detail.value;\r\n            },\r\n            changeEnableSatellite(e) {\r\n                this.enableSatellite = e.detail.value;\r\n            },\r\n            changeEnableTraffic(e) {\r\n                this.enableTraffic = e.detail.value;\r\n            },\r\n            addMarkers() {\r\n                this.markers = testMarkers;\r\n            },\r\n            addPolyline() {\r\n                this.polyline = testPolyline;\r\n            },\r\n\t\t\t\t// #ifndef MP-JD\r\n            addPolygons() {\r\n                this.polygons = testPolygons;\r\n            },\r\n\t\t\t\t// #endif\r\n            addCircles() {\r\n                this.circles = testCircles;\r\n            },\r\n            includePoint() {\r\n                this.includePoints = testIncludePoints;\r\n            },\r\n            handleGetCenterLocation() {\r\n                this.map.getCenterLocation({\r\n                    success: ret => {\r\n                        console.log(JSON.stringify(ret));\r\n                        uni.showModal({\r\n                            content: JSON.stringify(ret)\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            handleGetRegion() {\r\n                this.map.getRegion({\r\n                    success: ret => {\r\n                        console.log(JSON.stringify(ret));\r\n                        uni.showModal({\r\n                            content: JSON.stringify(ret)\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n\t\t\t\t// #ifndef MP-JD\r\n            handleTranslateMarker() {\r\n                this.map.translateMarker({\r\n                    markerId: 1,\r\n                    destination: {\r\n                        latitude: 39.989631,\r\n                        longitude: 116.481018\r\n                    },\r\n                    duration: 2000\r\n                }, ret => {\r\n                    console.log(JSON.stringify(ret));\r\n                    uni.showModal({\r\n                        content: JSON.stringify(ret)\r\n                    })\r\n                });\r\n            },\r\n\t\t\t\t// #endif\r\n            maptap(e) {\r\n                uni.showModal({\r\n                    content: JSON.stringify(e)\r\n                })\r\n            },\r\n            onmarkertap(e) {\r\n                uni.showModal({\r\n                    content: JSON.stringify(e)\r\n                })\r\n            },\r\n            oncontroltap(e) {\r\n                uni.showModal({\r\n                    content: JSON.stringify(e)\r\n                })\r\n            },\r\n            oncallouttap(e) {\r\n                uni.showModal({\r\n                    content: JSON.stringify(e)\r\n                })\r\n            },\r\n            onupdated(e) {\r\n                console.log(JSON.stringify(e))\r\n            },\r\n            onregionchange(e) {\r\n                console.log(JSON.stringify(e));\r\n            },\r\n            onpoitap(e) {\r\n                uni.showModal({\r\n                    content: JSON.stringify(e)\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .content {\r\n        flex: 1;\r\n    }\r\n\r\n    .map {\r\n        width: 750rpx;\r\n\t\t/* #ifdef H5 */\r\n\t\twidth: 100%;\r\n\t\t/* #endif */\r\n        height: 350px;\r\n        background-color: #f0f0f0;\r\n    }\r\n\r\n    .scrollview {\r\n        flex: 1;\r\n        padding: 10px;\r\n    }\r\n\r\n    .list-item {\r\n        flex-direction: row;\r\n        flex-wrap: nowrap;\r\n        align-items: center;\r\n        padding: 5px 0px;\r\n    }\r\n\r\n    .list-text {\r\n        flex: 1;\r\n    }\r\n\r\n    .button {\r\n        margin-top: 5px;\r\n        margin-bottom: 5px;\r\n    }\r\n</style>\r\n","import MiniProgramPage from 'D:/workspace/2025/wx/wx20250829/天天体验馆/pages/API/map/map.nvue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}