{"version":3,"file":"canvas.js","sources":["pages/component/canvas/canvas.vue","../../../../../Work-Tools/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvY29tcG9uZW50L2NhbnZhcy9jYW52YXMudnVl"],"sourcesContent":["<template>\r\n    <view>\r\n        <page-head :title=\"title\"></page-head>\r\n        <view class=\"page-body\">\r\n            <view class=\"page-body-wrapper\">\r\n                <!-- #ifdef APP-PLUS || H5 -->\r\n                <canvas canvas-id=\"canvas\" class=\"canvas\" :start=\"startStatus\" :change:start=\"animate.start\"\r\n                    :data-width=\"canvasWidth\" :data-height=\"canvasWidth\"></canvas>\r\n                <!-- #endif -->\r\n                <!-- #ifndef APP-PLUS || H5 -->\r\n                <canvas canvas-id=\"canvas\" id=\"canvas\" class=\"canvas\"></canvas>\r\n                <!-- #endif -->\r\n            </view>\r\n        </view>\r\n    </view>\r\n</template>\r\n\r\n<script module=\"animate\" lang=\"renderjs\">\r\n    function Ball({\r\n        x,\r\n        y,\r\n        vx,\r\n        vy,\r\n        canvasWidth,\r\n        canvasHeight,\r\n        ctx\r\n    }) {\r\n        this.canvasWidth = canvasWidth\r\n        this.canvasHeight = canvasHeight\r\n        this.ctx = ctx\r\n        this.x = x\r\n        this.y = y\r\n        this.vx = vx\r\n        this.vy = vy\r\n        this.radius = 5\r\n    }\r\n\r\n    Ball.prototype.draw = function() {\r\n        this.ctx.beginPath()\r\n        this.ctx.fillStyle = '#007AFF'\r\n        this.ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI)\r\n        this.ctx.closePath()\r\n        this.ctx.fill()\r\n    }\r\n\r\n    Ball.prototype.move = function() {\r\n        this.x += this.vx\r\n        this.y += this.vy\r\n        // 回到中心\r\n        // if (getDistance(this.x - this.canvasWidth / 2, this.y - this.canvasHeight / 2) >\r\n        // \tgetDistance(this.canvasWidth / 2, this.canvasHeight / 2) + this.radius) {\r\n        // \tthis.x = this.canvasWidth / 2\r\n        // \tthis.y = this.canvasHeight / 2\r\n        // }\r\n\r\n        // 边框反弹\r\n        if (this.x < this.radius) {\r\n            this.vx = Math.abs(this.vx)\r\n            return\r\n        }\r\n        if (this.x > this.canvasWidth - this.radius) {\r\n            this.vx = -Math.abs(this.vx)\r\n        }\r\n        if (this.y < this.radius) {\r\n            this.vy = Math.abs(this.vy)\r\n            return\r\n        }\r\n        if (this.y > this.canvasWidth - this.radius) {\r\n            this.vy = -Math.abs(this.vy)\r\n        }\r\n    }\r\n\r\n    function getDistance(x, y) {\r\n        return Math.pow(Math.pow(x, 2) + Math.pow(y, 2), 0.5)\r\n    }\r\n\r\n    export default {\r\n        methods: {\r\n            start(newVal, oldVal, owner, ins) {\r\n                let canvasWidth = ins.getDataset().width,\r\n                    canvasHeight = ins.getDataset().height,\r\n                    canvasEle = document.querySelectorAll('.canvas>canvas')[0],\r\n                    ctx = canvasEle.getContext('2d'),\r\n                    speed = 3,\r\n                    ballList = [],\r\n                    layer = 3,\r\n                    ballInlayer = 20\r\n                for (let i = 0; i < layer; i++) {\r\n                    let radius = getDistance(canvasWidth / 2, canvasHeight / 2) / layer * i\r\n                    for (let j = 0; j < ballInlayer; j++) {\r\n                        let deg = j * 2 * Math.PI / ballInlayer,\r\n                            sin = Math.sin(deg),\r\n                            cos = Math.cos(deg),\r\n                            x = radius * cos + canvasWidth / 2,\r\n                            y = radius * sin + canvasHeight / 2,\r\n                            vx = speed * cos,\r\n                            vy = speed * sin\r\n                        ballList.push(new Ball({\r\n                            x,\r\n                            y,\r\n                            vx,\r\n                            vy,\r\n                            canvasWidth,\r\n                            canvasHeight,\r\n                            ctx,\r\n                            radius: 5\r\n                        }))\r\n                    }\r\n                }\r\n\r\n                function animate(ballList) {\r\n                    ctx.clearRect(0, 0, canvasEle.width, canvasEle.height)\r\n                    ballList.forEach(function(item) {\r\n                        item.move()\r\n                        item.draw()\r\n                    })\r\n                    requestAnimationFrame(function() {\r\n                        animate(ballList)\r\n                    })\r\n                }\r\n                animate(ballList)\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<script>\r\n    // #ifndef APP-PLUS || H5\r\n\r\n    let ctx = null,\r\n        interval = null;\r\n\r\n    function Ball(x, y, vx, vy, canvasWidth, canvasHeight, ctx) {\r\n        this.canvasWidth = canvasWidth\r\n        this.canvasHeight = canvasHeight\r\n        this.ctx = ctx\r\n        this.x = x\r\n        this.y = y\r\n        this.vx = vx\r\n        this.vy = vy\r\n        this.radius = 5\r\n    }\r\n\r\n    Ball.prototype.draw = function() {\r\n        this.ctx.setFillStyle('#007AFF')\r\n        this.ctx.beginPath()\r\n        this.ctx.arc(this.x, this.y, this.radius, 0, 2 * Math.PI)\r\n        this.ctx.closePath()\r\n        this.ctx.fill()\r\n    }\r\n\r\n    Ball.prototype.move = function() {\r\n        this.x += this.vx\r\n        this.y += this.vy\r\n        // 回到中心\r\n        // if (getDistance(this.x - this.canvasWidth / 2, this.y - this.canvasHeight / 2) >\r\n        // \tgetDistance(this.canvasWidth / 2, this.canvasHeight / 2) + this.radius) {\r\n        // \tthis.x = this.canvasWidth / 2\r\n        // \tthis.y = this.canvasHeight / 2\r\n        // }\r\n\r\n        // 边框反弹\r\n        if (this.x < this.radius) {\r\n            this.vx = Math.abs(this.vx)\r\n            return\r\n        }\r\n        if (this.x > this.canvasWidth - this.radius) {\r\n            this.vx = -Math.abs(this.vx)\r\n        }\r\n        if (this.y < this.radius) {\r\n            this.vy = Math.abs(this.vy)\r\n            return\r\n        }\r\n        if (this.y > this.canvasWidth - this.radius) {\r\n            this.vy = -Math.abs(this.vy)\r\n        }\r\n    }\r\n\r\n    function getDistance(x, y) {\r\n        return Math.pow(Math.pow(x, 2) + Math.pow(y, 2), 0.5)\r\n    }\r\n\r\n    // #endif\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                title: 'canvas',\r\n                canvasWidth: 0,\r\n                startStatus: false,\r\n                ballList: []\r\n            }\r\n        },\r\n        onReady: function() {\r\n            this.$nextTick(() => {\r\n                uni.createSelectorQuery().select(\".canvas\").boundingClientRect(data => {\r\n                    this.canvasWidth = data.width\r\n                    // #ifdef APP-PLUS || H5\r\n                    this.startStatus = true\r\n                    // #endif\r\n                    // #ifndef APP-PLUS || H5\r\n                    ctx = uni.createCanvasContext('canvas')\r\n                    this.drawBall()\r\n                    // #endif\r\n                }).exec()\r\n            })\r\n        },\r\n        // #ifndef APP-PLUS || H5\r\n        onUnload: function() {\r\n            clearInterval(interval);\r\n        },\r\n        methods: {\r\n            drawBall: function() {\r\n                let canvasWidth = this.canvasWidth,\r\n                    canvasHeight = this.canvasWidth,\r\n                    speed = 3,\r\n                    ballList = [],\r\n                    layer = 3,\r\n                    ballInlayer = 20\r\n                for (let i = 0; i < layer; i++) {\r\n                    let radius = getDistance(canvasWidth / 2, canvasHeight / 2) / layer * i\r\n                    for (let j = 0; j < ballInlayer; j++) {\r\n                        let deg = j * 2 * Math.PI / ballInlayer,\r\n                            sin = Math.sin(deg),\r\n                            cos = Math.cos(deg),\r\n                            x = radius * cos + canvasWidth / 2,\r\n                            y = radius * sin + canvasHeight / 2,\r\n                            vx = speed * cos,\r\n                            vy = speed * sin\r\n                        ballList.push(new Ball(x, y, vx, vy, canvasWidth, canvasHeight, ctx))\r\n                    }\r\n                }\r\n\r\n                function animate(ballList) {\r\n                    // ctx.clearRect(0, 0, canvasWidth, canvasHeight)\r\n                    ballList.forEach(function(item) {\r\n                        item.move()\r\n                        item.draw()\r\n                    })\r\n                    ctx.draw()\r\n                }\r\n\r\n                interval = setInterval(function() {\r\n                    animate(ballList)\r\n                }, 17)\r\n            }\r\n        }\r\n        // #endif\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .page-body-wrapper {\r\n        text-align: center;\r\n    }\r\n\r\n    .canvas {\r\n        width: 610rpx;\r\n        height: 610rpx;\r\n        margin: auto;\r\n        background-color: #fff;\r\n    }\r\n</style>\n","import MiniProgramPage from 'D:/workspace/2025/wx/wx20250829/天天体验馆/pages/component/canvas/canvas.vue'\nwx.createPage(MiniProgramPage)"],"names":["ctx","uni","ballList"],"mappings":"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"}